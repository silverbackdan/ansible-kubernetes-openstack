#!/usr/bin/env ansible-playbook
---
- name: Launch k8s master
  hosts: localhost
  pre_tasks:
    - name: create network
      os_network:
        name: "{{ name }}"

    - name: create subnet
      os_subnet:
        network_name: "{{ network_name }}"
        name: "{{ subnet_name }}"
        cidr: 10.8.10.0/24
        dns_nameservers:
          - 8.8.8.8
          - 8.8.4.4
      register: subnet

    - name: create router
      os_router:
        name: "{{ router_name }}"
        network: "{{ external_network_name }}"
        interfaces:
          - "{{ network_name }}"
      register: router

    - name: Set variables
      set_fact:
        state: present
        routeruuid: "{{ router.id }}"
        subnetuuid: "{{ subnet.id }}"
  roles:
    - openstack-security-groups
    - openstack-master

- name: Master preparation
  hosts: master
  pre_tasks:
    - name: Set variables
      set_fact:
        state: present
  tags:
    - bootstrap
  gather_facts: false
  roles:
    - common

- name: Launch k8s nodes
  hosts: localhost
  roles:
    - openstack-nodes

- name: Nodes preparation
  hosts: nodes
  tags:
    - bootstrap
  gather_facts: false
  roles:
    - common

#- name: Install repo and packages
#  hosts: all
#  tags:
#    - bootstrap
#  become: true
#  roles:
#    - kubeadm

- name: Prepare k8s hosts
  hosts: all
  tags:
    - bootstrap
  become: true
#  become_method: sudo
#  gather_facts: false

  pre_tasks:
    - name: Install python 2
      raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)

    - name: Install pip
      shell: which pip || (curl https://bootstrap.pypa.io/get-pip.py | python - && rm -f get-pip.py)

    - name: Pin pip to 9.0.3
      shell: pip install pip==9.0.3

    - name: Gather facts after python installation
      setup: filter=ansible_*

    - name: Install packages
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - ansible
          - unzip
          - build-essential
          - python-dev
          - python-setuptools
          - libffi-dev
          - libxslt1-dev
          - libxml2-dev
          - libyaml-dev
          - libssl-dev
          - zlib1g-dev
          - jq

    - name: Install pypi libraries
      pip:
        name: "{{ libraries }}"
      ignore_errors: True
      vars:
        libraries:
          - python-openstackclient
          - httpie
  roles:
    - docker
    - k8s_cli

#- import_playbook: reset_k8s.yaml rebuild={{ rebuild }}

- name: k8s master setup
  hosts: master
  tags:
    - bootstrap
  become: true
  roles:
    - kube_master

- name: k8s nodes setup
  hosts: nodes
  become: true
  tags:
    - bootstrap
  roles:
#    - kubeadm-nodes
    - kube_node

- name: Set up cloud-controller-manager and cinder-csi-plugin
  hosts: master
  become: true
  become_method: sudo
  gather_facts: true
  roles:
    - kube_cloud_controller_manager
